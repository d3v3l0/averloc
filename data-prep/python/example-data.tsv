Global Index	File Path	File SHA	Function Index	Has Docstring	Function Name	Function Tokenized	Function AST	Processed At
8	/mnt/data-prep/python/temp/MechanicalSoup/setup.py	e980fad6095bd2c9223bdd2e6a28ca610302a8ad38dc5505c76531f01b95e4e4	1	YES	requirements_from_file	filename \"\"\"Parses a pip requirements file into a list.\"\"\" return [ line . strip ( ) for line in open ( filename , 'r' ) \n if line . strip ( ) and not line . strip ( ) . startswith ( '--' ) ]	( arguments ( arg ) ) ( Expr ( Str ) ) ( Return ( ListComp ( Call ( Attribute ( Name line ( Load ) ) ( Load ) ) ) ( comprehension ( Name line ( Store ) ) ( Call ( Name open ( Load ) ) ( Name filename ( Load ) ) ( Str ) ) ( BoolOp ( And ) ( Call ( Attribute ( Name line ( Load ) ) ( Load ) ) ) ( UnaryOp ( Not ) ( Call ( Attribute ( Call ( Attribute ( Name line ( Load ) ) ( Load ) ) ) ( Load ) ) ( Str ) ) ) ) ) ) )	Parses a pip requirements file into a list.	2019-10-10T19:08:43.472819
8	/mnt/data-prep/python/temp/MechanicalSoup/setup.py	e980fad6095bd2c9223bdd2e6a28ca610302a8ad38dc5505c76531f01b95e4e4	2	YES	read	fname , URL , URLImage \"\"\"Read the content of a file.\"\"\" readme = open ( path . join ( path . dirname ( __file__ ) , fname ) ) . read ( ) if hasattr ( readme , 'decode' ) : \n # In Python 3, turn bytes into str. \n          readme = readme . decode ( 'utf8' ) readme = re . sub ( r'`<([^>]*)>`__' , \n r'`\\1 <' + URL + r\"/blob/master/\\1>`__\" , \n readme ) readme = re . sub ( r\"\\.\\. image:: /\" , \".. image:: \" + URLImage + \"/\" , readme ) return readme	( arguments ( arg ) ( arg ) ( arg ) ) ( Expr ( Str ) ) ( Assign ( Name readme ( Store ) ) ( Call ( Attribute ( Call ( Name open ( Load ) ) ( Call ( Attribute ( Name path ( Load ) ) ( Load ) ) ( Call ( Attribute ( Name path ( Load ) ) ( Load ) ) ( Name __file__ ( Load ) ) ) ( Name fname ( Load ) ) ) ) ( Load ) ) ) ) ( If ( Call ( Name hasattr ( Load ) ) ( Name readme ( Load ) ) ( Str ) ) ( Assign ( Name readme ( Store ) ) ( Call ( Attribute ( Name readme ( Load ) ) ( Load ) ) ( Str ) ) ) ) ( Assign ( Name readme ( Store ) ) ( Call ( Attribute ( Name re ( Load ) ) ( Load ) ) ( Str ) ( BinOp ( BinOp ( Str ) ( Add ) ( Name URL ( Load ) ) ) ( Add ) ( Str ) ) ( Name readme ( Load ) ) ) ) ( Assign ( Name readme ( Store ) ) ( Call ( Attribute ( Name re ( Load ) ) ( Load ) ) ( Str ) ( BinOp ( BinOp ( Str ) ( Add ) ( Name URLImage ( Load ) ) ) ( Add ) ( Str ) ) ( Name readme ( Load ) ) ) ) ( Return ( Name readme ( Load ) ) )	Read the content of a file.	2019-10-10T19:08:43.473149
12	/mnt/data-prep/python/temp/MechanicalSoup/mechanicalsoup/browser.py	fc81854de87d4e53dcdeff28709355adefc0129d866e47a0bd3c2f599b189984	1	NO	__init__	self , session = None , soup_config = { 'features' : 'lxml' } , \n requests_adapters = None , \n raise_on_404 = False , user_agent = None self . raise_on_404 = raise_on_404 self . session = session or requests . Session ( ) if hasattr ( weakref , 'finalize' ) : \n              self . _finalize = weakref . finalize ( self . session , self . close ) \n  else : # pragma: no cover \n # Python < 3 does not have weakref.finalize, but these \n # versions accept calling session.close() within __del__ \n              self . _finalize = self . close self . set_user_agent ( user_agent ) if requests_adapters is not None : \n              for adaptee , adapter in requests_adapters . items ( ) : \n                  self . session . mount ( adaptee , adapter ) self . soup_config = soup_config or dict ( )	( arguments ( arg ) ( arg ) ( arg ) ( arg ) ( arg ) ( arg ) ( NameConstant ) ( Dict ( Str ) ( Str ) ) ( NameConstant ) ( NameConstant ) ( NameConstant ) ) ( Assign ( Attribute ( Name self ( Load ) ) ( Store ) ) ( Name raise_on_404 ( Load ) ) ) ( Assign ( Attribute ( Name self ( Load ) ) ( Store ) ) ( BoolOp ( Or ) ( Name session ( Load ) ) ( Call ( Attribute ( Name requests ( Load ) ) ( Load ) ) ) ) ) ( If ( Call ( Name hasattr ( Load ) ) ( Name weakref ( Load ) ) ( Str ) ) ( Assign ( Attribute ( Name self ( Load ) ) ( Store ) ) ( Call ( Attribute ( Name weakref ( Load ) ) ( Load ) ) ( Attribute ( Name self ( Load ) ) ( Load ) ) ( Attribute ( Name self ( Load ) ) ( Load ) ) ) ) ( Assign ( Attribute ( Name self ( Load ) ) ( Store ) ) ( Attribute ( Name self ( Load ) ) ( Load ) ) ) ) ( Expr ( Call ( Attribute ( Name self ( Load ) ) ( Load ) ) ( Name user_agent ( Load ) ) ) ) ( If ( Compare ( Name requests_adapters ( Load ) ) ( IsNot ) ( NameConstant ) ) ( For ( Tuple ( Name adaptee ( Store ) ) ( Name adapter ( Store ) ) ( Store ) ) ( Call ( Attribute ( Name requests_adapters ( Load ) ) ( Load ) ) ) ( Expr ( Call ( Attribute ( Attribute ( Name self ( Load ) ) ( Load ) ) ( Load ) ) ( Name adaptee ( Load ) ) ( Name adapter ( Load ) ) ) ) ) ) ( Assign ( Attribute ( Name self ( Load ) ) ( Store ) ) ( BoolOp ( Or ) ( Name soup_config ( Load ) ) ( Call ( Name dict ( Load ) ) ) ) )	<MISSING>	2019-10-10T19:08:43.512751
12	/mnt/data-prep/python/temp/MechanicalSoup/mechanicalsoup/browser.py	fc81854de87d4e53dcdeff28709355adefc0129d866e47a0bd3c2f599b189984	2	YES	__looks_like_html	response \"\"\"Guesses entity type when Content-Type header is missing.\n        Since Content-Type is not strictly required, some servers leave it out.\n        \"\"\" text = response . text . lstrip ( ) . lower ( ) return text . startswith ( '<html' ) or text . startswith ( '<!doctype' )	( arguments ( arg ) ) ( Expr ( Str ) ) ( Assign ( Name text ( Store ) ) ( Call ( Attribute ( Call ( Attribute ( Attribute ( Name response ( Load ) ) ( Load ) ) ( Load ) ) ) ( Load ) ) ) ) ( Return ( BoolOp ( Or ) ( Call ( Attribute ( Name text ( Load ) ) ( Load ) ) ( Str ) ) ( Call ( Attribute ( Name text ( Load ) ) ( Load ) ) ( Str ) ) ) )	Guesses entity type when Content-Type header is missing.\nSince Content-Type is not strictly required, some servers leave it out.	2019-10-10T19:08:43.512942
12	/mnt/data-prep/python/temp/MechanicalSoup/mechanicalsoup/browser.py	fc81854de87d4e53dcdeff28709355adefc0129d866e47a0bd3c2f599b189984	3	YES	add_soup	response , soup_config \"\"\"Attaches a soup object to a requests response.\"\"\" if ( \"text/html\" in response . headers . get ( \"Content-Type\" , \"\" ) or \n Browser . __looks_like_html ( response ) ) : \n              response . soup = bs4 . BeautifulSoup ( response . content , ** soup_config ) \n  else : \n              response . soup = None	( arguments ( arg ) ( arg ) ) ( Expr ( Str ) ) ( If ( BoolOp ( Or ) ( Compare ( Str ) ( In ) ( Call ( Attribute ( Attribute ( Name response ( Load ) ) ( Load ) ) ( Load ) ) ( Str ) ( Str ) ) ) ( Call ( Attribute ( Name Browser ( Load ) ) ( Load ) ) ( Name response ( Load ) ) ) ) ( Assign ( Attribute ( Name response ( Load ) ) ( Store ) ) ( Call ( Attribute ( Name bs4 ( Load ) ) ( Load ) ) ( Attribute ( Name response ( Load ) ) ( Load ) ) ( keyword ( Name soup_config ( Load ) ) ) ) ) ( Assign ( Attribute ( Name response ( Load ) ) ( Store ) ) ( NameConstant ) ) )	Attaches a soup object to a requests response.	2019-10-10T19:08:43.513144
12	/mnt/data-prep/python/temp/MechanicalSoup/mechanicalsoup/browser.py	fc81854de87d4e53dcdeff28709355adefc0129d866e47a0bd3c2f599b189984	4	YES	set_cookiejar	self , cookiejar \"\"\"Replaces the current cookiejar in the requests session. Since the\n        session handles cookies automatically without calling this function,\n        only use this when default cookie handling is insufficient.\n\n        :param cookiejar: Any `cookielib.CookieJar\n          <https://docs.python.org/2/library/cookielib.html#cookielib.CookieJar>`__\n          compatible object.\n        \"\"\" self . session . cookies = cookiejar	( arguments ( arg ) ( arg ) ) ( Expr ( Str ) ) ( Assign ( Attribute ( Attribute ( Name self ( Load ) ) ( Load ) ) ( Store ) ) ( Name cookiejar ( Load ) ) )	Replaces the current cookiejar in the requests session. Since the\nsession handles cookies automatically without calling this function,\nonly use this when default cookie handling is insufficient.\n\n:param cookiejar: Any `cookielib.CookieJar\n  <https://docs.python.org/2/library/cookielib.html#cookielib.CookieJar>`__\n  compatible object.	2019-10-10T19:08:43.513224
12	/mnt/data-prep/python/temp/MechanicalSoup/mechanicalsoup/browser.py	fc81854de87d4e53dcdeff28709355adefc0129d866e47a0bd3c2f599b189984	5	YES	get_cookiejar	self \"\"\"Gets the cookiejar from the requests session.\"\"\" return self . session . cookies	( arguments ( arg ) ) ( Expr ( Str ) ) ( Return ( Attribute ( Attribute ( Name self ( Load ) ) ( Load ) ) ( Load ) ) )	Gets the cookiejar from the requests session.	2019-10-10T19:08:43.513283
12	/mnt/data-prep/python/temp/MechanicalSoup/mechanicalsoup/browser.py	fc81854de87d4e53dcdeff28709355adefc0129d866e47a0bd3c2f599b189984	6	YES	set_user_agent	self , user_agent \"\"\"Replaces the current user agent in the requests session headers.\"\"\" if user_agent is None : \n              requests_ua = requests . utils . default_user_agent ( ) \n user_agent = '%s (%s/%s)' % ( requests_ua , __title__ , __version__ ) self . session . headers [ 'User-agent' ] = user_agent	( arguments ( arg ) ( arg ) ) ( Expr ( Str ) ) ( If ( Compare ( Name user_agent ( Load ) ) ( Is ) ( NameConstant ) ) ( Assign ( Name requests_ua ( Store ) ) ( Call ( Attribute ( Attribute ( Name requests ( Load ) ) ( Load ) ) ( Load ) ) ) ) ( Assign ( Name user_agent ( Store ) ) ( BinOp ( Str ) ( Mod ) ( Tuple ( Name requests_ua ( Load ) ) ( Name __title__ ( Load ) ) ( Name __version__ ( Load ) ) ( Load ) ) ) ) ) ( Assign ( Subscript ( Attribute ( Attribute ( Name self ( Load ) ) ( Load ) ) ( Load ) ) ( Index ( Str ) ) ( Store ) ) ( Name user_agent ( Load ) ) )	Replaces the current user agent in the requests session headers.	2019-10-10T19:08:43.513442
12	/mnt/data-prep/python/temp/MechanicalSoup/mechanicalsoup/browser.py	fc81854de87d4e53dcdeff28709355adefc0129d866e47a0bd3c2f599b189984	7	YES	request	self , * args , ** kwargs \"\"\"Straightforward wrapper around `requests.Session.request\n        <http://docs.python-requests.org/en/master/api/#requests.Session.request>`__.\n\n        :return: `requests.Response\n            <http://docs.python-requests.org/en/master/api/#requests.Response>`__\n            object with a *soup*-attribute added by :func:`add_soup`.\n\n        This is a low-level function that should not be called for\n        basic usage (use :func:`get` or :func:`post` instead). Use it if you\n        need an HTTP verb that MechanicalSoup doesn't manage (e.g. MKCOL) for\n        example.\n        \"\"\" response = self . session . request ( * args , ** kwargs ) Browser . add_soup ( response , self . soup_config ) return response	( arguments ( arg ) ( arg ) ( arg ) ) ( Expr ( Str ) ) ( Assign ( Name response ( Store ) ) ( Call ( Attribute ( Attribute ( Name self ( Load ) ) ( Load ) ) ( Load ) ) ( Starred ( Name args ( Load ) ) ( Load ) ) ( keyword ( Name kwargs ( Load ) ) ) ) ) ( Expr ( Call ( Attribute ( Name Browser ( Load ) ) ( Load ) ) ( Name response ( Load ) ) ( Attribute ( Name self ( Load ) ) ( Load ) ) ) ) ( Return ( Name response ( Load ) ) )	Straightforward wrapper around `requests.Session.request\n<http://docs.python-requests.org/en/master/api/#requests.Session.request>`__.\n\n:return: `requests.Response\n    <http://docs.python-requests.org/en/master/api/#requests.Response>`__\n    object with a *soup*-attribute added by :func:`add_soup`.\n\nThis is a low-level function that should not be called for\nbasic usage (use :func:`get` or :func:`post` instead). Use it if you\nneed an HTTP verb that MechanicalSoup doesn't manage (e.g. MKCOL) for\nexample.	2019-10-10T19:08:43.513587
